#!/bin/sh

CUR_DIR=$(cd $(dirname $0) && pwd);
VAR_DIR=`readlink -f "$CUR_DIR/../var"`

mkdir -p $VAR_DIR

echo "Running tests..."


cat <<EOF > $VAR_DIR/1.php
<?php
require_once(dirname(__FILE__) . "/../../lib/PhpBuf.php");
class Foo extends PhpBuf_Message_Abstract {
	public function __construct() {
		\$this->setField("id", PhpBuf_Type::INT, PhpBuf_Rule::REPEATED, 1);
	}
	public static function name(){
        return __CLASS__;
    }
}
\$foo = new Foo();
\$foo->id = array(1, 2, 3);
\$writer = new PhpBuf_IO_Writer();
\$foo->write(\$writer);
file_put_contents(dirname(__FILE__) . "/../var/hex", \$writer->getData());
?>
EOF

php $VAR_DIR/1.php

cat <<EOF > $VAR_DIR/1.py
import sys

from google.protobuf import descriptor
from google.protobuf import message
from google.protobuf import reflection
from google.protobuf import service
from google.protobuf import service_reflection
from google.protobuf import descriptor_pb2



_IDS = descriptor.Descriptor(
  name='ids',
  full_name='ids',
  filename='my.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='id', full_name='ids.id', index=0,
      number=1, type=5, cpp_type=1, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)



class ids(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _IDS

if __name__ == '__main__':
  f = file(sys.path[0] + "/hex")
  data = f.read()
  f.close()
  foo = ids()
  foo.ParseFromString(data)
  for i in range(len(foo.id)):
    foo.id[i] += 1
  f = file(sys.path[0] + "/hex", 'w')
  f.write(foo.SerializeToString())
  f.close()
EOF

python $VAR_DIR/1.py

cat <<EOF > $VAR_DIR/2.php
<?php
require_once(dirname(__FILE__) . "/../../lib/PhpBuf.php");
class Foo extends PhpBuf_Message_Abstract {
	public function __construct() {
		\$this->setField("id", PhpBuf_Type::INT, PhpBuf_Rule::REPEATED, 1);
	}
	public static function name(){
        return __CLASS__;
    }
}

\$data = file_get_contents(dirname(__FILE__) . "/../var/hex");
\$reader = new PhpBuf_IO_Reader(\$data);
\$bar = new Foo();
\$bar->read(\$reader);
if(\$bar->id[0] == 2
  && \$bar->id[1] == 3
  && \$bar->id[2] == 4)
  echo "Test 1: DONE!\n";
else
  echo "Test 2: FAIL!\n";
?>
EOF

php $VAR_DIR/2.php

cat <<EOF > $VAR_DIR/3.php
<?php
require_once(dirname(__FILE__) . "/../../lib/PhpBuf.php");
class Message_Example extends PhpBuf_Message_Abstract {
    public function __construct() {
        \$this->setField("id", PhpBuf_Type::INT, PhpBuf_Rule::REQUIRED, 1);
        \$this->setField("balance", PhpBuf_Type::SINT, PhpBuf_Rule::REQUIRED, 2);
        \$this->setField("isAdmin", PhpBuf_Type::BOOL, PhpBuf_Rule::REQUIRED, 3);
        \$this->setField("status", PhpBuf_Type::ENUM, PhpBuf_Rule::REQUIRED, 4, array("active", "inactive", "deleted"));
        \$this->setField("name", PhpBuf_Type::STRING, PhpBuf_Rule::REQUIRED, 5);
        \$this->setField("bytes", PhpBuf_Type::BYTES, PhpBuf_Rule::REQUIRED, 6);
    }
    public static function name(){
        return __CLASS__;
    }
}

\$message = new Message_Example();
\$writer = new PhpBuf_IO_Writer();
\$message->id = 150;
\$message->balance = -12345;
\$message->isAdmin = true;
\$message->status = "deleted";
\$message->name = "Andrey Lepeshkin";
\$message->bytes = "Some bytes";
\$message->write(\$writer);

file_put_contents(dirname(__FILE__) . "/../var/hex", \$writer->getData());
EOF

php $VAR_DIR/3.php

cat <<EOF > $VAR_DIR/2.py
# Generated by the protocol buffer compiler.  DO NOT EDIT!
import sys

from google.protobuf import descriptor
from google.protobuf import message
from google.protobuf import reflection
from google.protobuf import service
from google.protobuf import service_reflection
from google.protobuf import descriptor_pb2


_MESSAGE_EXAMPLE_STATUS = descriptor.EnumDescriptor(
  name='Status',
  full_name='Message_Example.Status',
  filename='Status',
  values=[
    descriptor.EnumValueDescriptor(
      name='active', index=0, number=0,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='inactive', index=1, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='deleted', index=2, number=2,
      options=None,
      type=None),
  ],
  options=None,
)


_MESSAGE_EXAMPLE = descriptor.Descriptor(
  name='Message_Example',
  full_name='Message_Example',
  filename='test.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='id', full_name='Message_Example.id', index=0,
      number=1, type=5, cpp_type=1, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='balance', full_name='Message_Example.balance', index=1,
      number=2, type=17, cpp_type=1, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='isAdmin', full_name='Message_Example.isAdmin', index=2,
      number=3, type=8, cpp_type=7, label=2,
      default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='status', full_name='Message_Example.status', index=3,
      number=4, type=14, cpp_type=8, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='name', full_name='Message_Example.name', index=4,
      number=5, type=9, cpp_type=9, label=2,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='bytes', full_name='Message_Example.bytes', index=5,
      number=6, type=12, cpp_type=9, label=2,
      default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
    _MESSAGE_EXAMPLE_STATUS,
  ],
  options=None)


_MESSAGE_EXAMPLE.fields_by_name['status'].enum_type = _MESSAGE_EXAMPLE_STATUS

class Message_Example(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _MESSAGE_EXAMPLE

if __name__ == '__main__':
  f = file(sys.path[0] + "/hex")
  data = f.read()
  f.close()
  foo = Message_Example()
  foo.ParseFromString(data)
  if foo.id == 150 and foo.balance == -12345 and foo.isAdmin == True and foo.status == Message_Example.deleted and foo.name == "Andrey Lepeshkin" and foo.bytes == "Some bytes":
    print "Test 2: DONE!"
  else:
    print "Test 2: FAIL!"
EOF

python $VAR_DIR/2.py

